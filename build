#!/bin/bash

author="tlowerison"
app="credential-1password"
bundle="com.$author.$app"
repo="$GOPATH/src/github.com/$author/$app"

builds=( "darwin/amd64" ) # TODO: darwin/arm64, linux/amd64
install_location="/usr/local/bin"

build_dest=$(mktemp -d -t "$bundle")
pkg_src=$(mktemp -d -t "$bundle")
zip_src=$(mktemp -d -t "$bundle")

cleanup() {
  rc=$?
  if [[ "$build_dest" != "" ]]; then rm -rf "$build_dest"; fi
  if [[ "$pkg_src" != "" ]]; then rm -rf "$pkg_src"; fi
  if [[ "$zip_src" != "" ]]; then rm -rf "$zip_src"; fi
  exit `expr $rc + 0`
}

trap "trap - INT TERM; cleanup" INT TERM

for build in "${builds[@]}"; do
  combo=( $(echo "$build" | tr "/" " " ) )
  os="${combo[0]}"
  arch="${combo[1]}"
  GOOS="$os" GOARCH="$arch" go build -o "$build_dest/$os/$arch"
done

find "$build_dest" -type f | xargs lipo -create -output "$repo/$app"

copy_contents() {
  dst="$1"
  cp "$repo/$app" "$dst/$app"
  ls -p "$repo/scripts" | grep -v / | xargs -n 1 -I {} cp $repo/scripts/{} $dst/{}
  ls -p "$dst" | grep -v / | xargs -n 1 -I {} chmod u+x $dst/{}
  ls -p "$dst" | grep -v / | xargs -n 1 -I {} codesign --sign "Developer ID Application" -o runtime -v "$dst/{}"
}

# pkg

copy_contents "$pkg_src"

pkgbuild \
  --root="$pkg_src" \
  --sign="Developer ID Installer" \
  --identifier="$bundle" \
  --install-location="$install_location" \
  --scripts="scripts" \
   --ownership=preserve \
  "$repo/$app.pkg"

# zip

copy_contents "$zip_src"

# remove .DS_Store files
find "$zip_src" -name '*.DS_Store' -type f -delete

ditto -c -k "$zip_src" "$repo/$app.zip"

# remove unwanted file that shows up in .zip
zip -d "$repo/$app.zip" "._docker-build"

codesign --sign "Developer ID Application" -o runtime -v "$repo/$app.zip"

# cleanup
trap - INT TERM; cleanup
