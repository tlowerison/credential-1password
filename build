#!/bin/bash

author="tlowerison"
app="credential-1password"
bundle="com.$author.$app"
repo="$GOPATH/src/github.com/$author/$app"

builds=( "darwin/amd64" ) # TODO: darwin/arm64, linux/amd64
install_location="/usr/local/bin"

build_dst=$(mktemp -d -t "$bundle")
pkg_src=$(mktemp -d -t "$bundle")
zip_src=$(mktemp -d -t "$bundle")

cleanup() {
  crc=$?
  trap - EXIT INT TERM
  if [[ "$build_dst" != "" ]]; then rm -rf "$build_dst"; fi
  if [[ "$pkg_src" != "" ]]; then rm -rf "$pkg_src"; fi
  if [[ "$zip_src" != "" ]]; then rm -rf "$zip_src"; fi
  if [[ "$crc" != "0" ]]; then
    exit `expr $crc + 0`
  fi
}

copy_contents() {
  dst="$1" && \
  cp "$repo/$app" "$dst/$app" && \
  ls -p "$repo/scripts" | grep -v / | xargs -n 1 -I {} cp $repo/scripts/{} $dst/{} && \
  find "$dst" -type f | xargs -n 1 chmod u+x && \
  find "$dst" -type f | xargs -n 1 codesign --sign "Developer ID Application" -o runtime -v
}

trap "trap - EXIT INT TERM; cleanup" EXIT INT TERM

for build in "${builds[@]}"; do
  combo=( $(echo "$build" | tr "/" " " ) )
  os="${combo[0]}"
  arch="${combo[1]}"
  GOOS="$os" GOARCH="$arch" go build -o "$build_dst/$os/$arch"
  rc=$?
  if [[ "$rc" != "0" ]]; then
    cleanup
    exit `expr $rc + 0`
  fi
done

find "$build_dst" -type f | xargs lipo -create -output "$repo/$app" && \

# pkg

copy_contents "$pkg_src" && \

pkgbuild \
  --root="$pkg_src" \
  --sign="Developer ID Installer" \
  --identifier="$bundle" \
  --install-location="$install_location" \
  --scripts="scripts" \
   --ownership=preserve \
  "$repo/$app.pkg" && \

# zip

copy_contents "$zip_src" && \

# remove .DS_Store files
find "$zip_src" -name '*.DS_Store' -type f -delete && \

ditto -c -k "$zip_src" "$repo/$app.zip" && \

# remove unwanted hidden files that show up in .zip
ls -p "$repo/scripts" | grep -v / | xargs -n 1 -I {} zip -d "$repo/$app.zip" "._{}" && \

codesign --sign "Developer ID Application" -o runtime -v "$repo/$app.zip" && \

cleanup
