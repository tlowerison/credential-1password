#!/bin/bash

# config dir
configdir=$HOME/.credential-1password

# read in project credentials config
filename=".credentials"

credentials_tree_search=$(cat $configdir/config.yaml | grep "  credentials-tree-search:" | sed 's/.*: //')

conf=""
if [[ $credentials_tree_search == "true" ]]; then
  dir=$PWD
  while [[ ! -e "$dir/$filename" && "$dir" != "$HOME"  ]]; do
    dir=$(dirname "$dir")
  done
  if [[ -e "$dir/$filename" ]]; then
    conf=$(cat "$dir/$filename")
  fi
elif [[ -e $PWD/$filename ]]; then
  conf=$(cat $PWD/$filename)
fi

if [[ $conf == "" && -e $configdir/$filename ]]; then
  conf=$(cat $configdir/$filename)
fi

if [[ $conf == "" ]]; then
  echo "  "
  echo "  no 1password credentials file found"
  echo "  credentials file should be formatted like:"
  echo "  git"
  echo "  credentials passed to git-credential-1password get"
  echo "  "
  echo "  foobar"
  echo "  credentials passed to credential-1password get --mode=foobar"
  echo "  "
  exit 1
fi

# convert 2 newlines to 1 tab
conf=${conf//$'\n'$'\n'/$'\t'}

# eat up further newlines
while [[ "$conf" =~ $'\t'$'\n' ]] ; do
  conf=${conf//$'\t'$'\n'/$'\t'}
done

# sqeeze tabs
conf=${conf//$'\t'$'\t'/$'\t'}

# split into array
IFS=$'\t'; result=( $conf )

secrets=""

# aggregate secrets
for credential in ${result[@]}; do
  mode=$(printf $credential | head -n 1)
  keys=$(printf $credential | sed 1d)
  credentials=""
  if [[ "$keys" == "" ]]; then
    credentials=$(credential-1password get --mode=$mode)
  else
    credentials=$(printf $keys | credential-1password get --mode=$mode)
  fi
  rv=$?
  if [[ "$rv" != "0" ]]; then
    exit $?
  fi
  secrets+="--secret=id=$mode-credentials,src=<(printf \$'$credentials') "
done

# build docker image with secrets
eval "DOCKER_BUILDKIT=1 docker build $secrets $@"
